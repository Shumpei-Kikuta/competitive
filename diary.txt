4/29
abc116-3
    良い点
    ・あらかじめアルゴリズムを記述し，プログラミングしながら考えなかったこと
    →デバッグに時間がかからない
    悪い点
    ・デバッグの方法論がない
    →必ず確立させる，これが遅い原因gdbを使う

4/30
abc114-3
    良い点
    ・計算量をあらかじめ考え，これじゃ無理だなが意識できた
    ・アルゴリズムを記述してかけた
    ・深さ優先は完全マスター，終了条件を意識できた
    ・デバッグなしで通せた
    悪い点
    ・深さ優先が使えるということを忘れていた．問題によっては計算量が少ないケースもある．特殊ケースを求めるような場合
    
abc113-3
    良い点
    ・アルゴリズムを柔軟に修正できた
    ・pythonへの変更が素早くできた
    悪い点
    ・もう少し実装前に細かくできた方が良い→擬似コードまで落とす
    ・擬似コードまで落とさないと計算量が正しく評価できない
    
abc112-3
    良い点
    ・方程式の解放は大抵全探索
    ・計算量，アルゴリズムは完璧
    ・gdbをつかってデバッグできた

5/1
abc109_3
    悪い点
    ・アルゴリズムがあっているかテストケースが少なかった．
    →5個くらい準備した方がいい
    ・ミスに気がついたのが終盤で取り返しがつかなかった
    →前半のねる時間をもっと増やす
    イメージ
    1/2は理解，設計，テスト→1/2を実装，テスト
abc107_3
    良い点
    ・尺取り法を使って実装できた
    悪い点
    ・自分でテストを通さずに提出してしまった．
    →極端なケース5, 6個は通した方がいい
    ・設計中はコーナーケースは考えられなかった．
    →コーディング時に直せたからまあ良い

5/2
abc104-3
    悪い点
    ・pythonにまだ慣れていない
    →pythonだけでいく

abc100-3
    良い点
    ・アルゴリズムが正しい

abc99-3
    良い点
    ・すぐに諦められた
    悪い点
    ・数学的なシグマから，具体的な形に落とし込めなかった
    ・どうしたら気づけたか
    中央値，平均値あたりとあたりをつけられればよかった

5/3
    良い点
    ・アルゴリズムを正確に記述できるようになってきた
    ・コードを書くのは最後，アルゴリズム設計後にテストを行うが徹底して行えている
    注意
    全探索で解ける場合もある．全探索は一番最初に考えるべき！